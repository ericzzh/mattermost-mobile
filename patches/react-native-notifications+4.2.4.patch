diff --git a/node_modules/react-native-notifications/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java b/node_modules/react-native-notifications/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java
index f9c858b..94ea188 100644
--- a/node_modules/react-native-notifications/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java
+++ b/node_modules/react-native-notifications/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java
@@ -2,8 +2,8 @@
 package com.wix.reactnativenotifications;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.v4.app.NotificationManagerCompat;
+import androidx.annotation.NonNull;
+import androidx.core.app.NotificationManagerCompat;
 
 public abstract class NotificationManagerCompatFacade {
     public static NotificationManagerCompat from(@NonNull Context context) {
diff --git a/node_modules/react-native-notifications/lib/android/app/build.gradle b/node_modules/react-native-notifications/lib/android/app/build.gradle
index d049e84..cbf1e89 100644
--- a/node_modules/react-native-notifications/lib/android/app/build.gradle
+++ b/node_modules/react-native-notifications/lib/android/app/build.gradle
@@ -121,8 +121,8 @@ android {
 
 dependencies {
     implementation "org.jetbrains.kotlin:$kotlinStdlib:$kotlinVersion"
-    implementation "com.google.firebase:firebase-messaging:$firebaseVersion"
     implementation 'com.facebook.react:react-native:+'
+    implementation 'me.pushy:sdk:1.0.84'
 
     // tests
     testImplementation 'junit:junit:4.12'
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/AndroidManifest.xml b/node_modules/react-native-notifications/lib/android/app/src/main/AndroidManifest.xml
index 24cd226..dfd2f82 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/AndroidManifest.xml
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/AndroidManifest.xml
@@ -3,6 +3,15 @@
     xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.wix.reactnativenotifications">
 
+    <!-- Pushy Permissions -->
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
+    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
+
+    <!-- End Pushy Permissions -->
     <application>
 
         <!--
@@ -10,19 +19,53 @@
          -->
         <service android:name=".core.ProxyService"/>
 
-        <service
-            android:name=".fcm.FcmInstanceIdListenerService"
-            android:exported="true">
-            <intent-filter>
-                <action android:name="com.google.firebase.MESSAGING_EVENT" />
-                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
-            </intent-filter>
-        </service>
-
         <service
             android:name=".fcm.FcmInstanceIdRefreshHandlerService"
             android:exported="false"
             android:permission="android.permission.BIND_JOB_SERVICE" />
+        <receiver android:name=".core.notification.PushNotificationPublisher"
+            android:enabled="true"
+            android:exported="false" />
+
+        <!-- Pushy Declarations -->
+
+        <!-- Pushy Notification Receiver -->
+        <!-- Incoming push notifications will invoke the following BroadcastReceiver -->
+        <receiver android:name=".fcm.PushReceiver" android:exported="false">
+            <intent-filter>
+                <!-- Do not modify this -->
+                <action android:name="pushy.me" />
+            </intent-filter>
+        </receiver>
+
+        <!-- Pushy Update Receiver -->
+        <!-- Do not modify - internal BroadcastReceiver that restarts the listener service -->
+        <receiver android:name="me.pushy.sdk.receivers.PushyUpdateReceiver" android:exported="false">
+            <intent-filter>
+                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
+            </intent-filter>
+        </receiver>
+
+        <!-- Pushy Boot Receiver -->
+        <!-- Do not modify - internal BroadcastReceiver that restarts the listener service -->
+        <receiver android:name="me.pushy.sdk.receivers.PushyBootReceiver" android:exported="false">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED"/>
+            </intent-filter>
+        </receiver>
+
+        <!-- Pushy Socket Service -->
+        <!-- Do not modify - internal service -->
+        <service android:name="me.pushy.sdk.services.PushySocketService" android:stopWithTask="false" />
+
+        <!-- Pushy Job Service (added in Pushy SDK 1.0.35) -->
+        <!-- Do not modify - internal service -->
+        <service android:name="me.pushy.sdk.services.PushyJobService"
+            android:permission="android.permission.BIND_JOB_SERVICE"
+            android:stopWithTask="false" />
+
+        <!-- End Pushy Declarations -->
+
     </application>
 
 </manifest>
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsModule.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsModule.java
index db9eaba..af65d0e 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsModule.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsModule.java
@@ -100,7 +100,12 @@ public class RNNotificationsModule extends ReactContextBaseJavaModule implements
         if(BuildConfig.DEBUG) Log.d(LOGTAG, "Native method invocation: postLocalNotification");
         final Bundle notificationProps = Arguments.toBundle(notificationPropsMap);
         final IPushNotification pushNotification = PushNotification.get(getReactApplicationContext().getApplicationContext(), notificationProps);
-        pushNotification.onPostRequest(notificationId);
+        double date = notificationProps.getDouble("fireDate", 0);
+        if (date == 0) {
+            pushNotification.onPostRequest(notificationId);
+        } else {
+            pushNotification.onScheduleRequest(notificationId);
+        }
     }
 
     @ReactMethod
@@ -109,6 +114,12 @@ public class RNNotificationsModule extends ReactContextBaseJavaModule implements
         notificationsDrawer.onNotificationClearRequest(notificationId);
     }
 
+    @ReactMethod
+    public void cancelAllLocalNotifications() {
+        IPushNotificationsDrawer notificationDrawer = PushNotificationsDrawer.get(getReactApplicationContext().getApplicationContext());
+        notificationDrawer.onCancelAllLocalNotifications();
+    }
+
     @ReactMethod
     public void setCategories(ReadableArray categories) {
     
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsPackage.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsPackage.java
index eadf41e..59dfd0b 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsPackage.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/RNNotificationsPackage.java
@@ -10,7 +10,6 @@ import com.facebook.react.ReactPackage;
 import com.facebook.react.bridge.NativeModule;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.uimanager.ViewManager;
-import com.google.firebase.FirebaseApp;
 import com.wix.reactnativenotifications.core.AppLifecycleFacade;
 import com.wix.reactnativenotifications.core.AppLifecycleFacadeHolder;
 import com.wix.reactnativenotifications.core.InitialNotificationHolder;
@@ -20,10 +19,12 @@ import com.wix.reactnativenotifications.core.notification.PushNotification;
 import com.wix.reactnativenotifications.core.notification.PushNotificationProps;
 import com.wix.reactnativenotifications.core.notificationdrawer.IPushNotificationsDrawer;
 import com.wix.reactnativenotifications.core.notificationdrawer.PushNotificationsDrawer;
+import com.wix.reactnativenotifications.fcm.PushyApp;
 
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
+import me.pushy.sdk.Pushy;
 
 public class RNNotificationsPackage implements ReactPackage, AppLifecycleFacade.AppVisibilityListener, Application.ActivityLifecycleCallbacks {
 
@@ -31,7 +32,7 @@ public class RNNotificationsPackage implements ReactPackage, AppLifecycleFacade.
 
     public RNNotificationsPackage(Application application) {
         mApplication = application;
-        FirebaseApp.initializeApp(application.getApplicationContext());
+//        PushyApp.initializeApp(application.getApplicationContext());
 
         AppLifecycleFacadeHolder.get().addVisibilityListener(this);
         application.registerActivityLifecycleCallbacks(this);
@@ -63,6 +64,8 @@ public class RNNotificationsPackage implements ReactPackage, AppLifecycleFacade.
         notificationsDrawer.onNewActivity(activity);
 
         callOnOpenedIfNeed(activity);
+
+        Pushy.listen(mApplication.getApplicationContext());
     }
 
     @Override
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/helpers/ScheduleNotificationHelper.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/helpers/ScheduleNotificationHelper.java
new file mode 100644
index 0000000..dde4a2c
--- /dev/null
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/helpers/ScheduleNotificationHelper.java
@@ -0,0 +1,89 @@
+package com.wix.reactnativenotifications.core.helpers;
+
+import android.app.AlarmManager;
+import android.os.Build;
+import android.os.Bundle;
+import android.content.Context;
+import android.content.Intent;
+import android.app.PendingIntent;
+import android.content.SharedPreferences;
+import android.util.Log;
+
+import com.wix.reactnativenotifications.core.notification.PushNotificationProps;
+import com.wix.reactnativenotifications.core.notification.PushNotificationPublisher;
+
+import static com.wix.reactnativenotifications.Defs.LOGTAG;
+
+public class ScheduleNotificationHelper {
+    public static ScheduleNotificationHelper sInstance;
+    public static final String PREFERENCES_KEY = "rn_push_notification";
+    static final String NOTIFICATION_ID = "notificationId";
+
+    private final SharedPreferences scheduledNotificationsPersistence;
+    protected final Context mContext;
+
+    private ScheduleNotificationHelper(Context context) {
+        this.mContext = context;
+        this.scheduledNotificationsPersistence = context.getSharedPreferences(ScheduleNotificationHelper.PREFERENCES_KEY, Context.MODE_PRIVATE);
+    }
+
+    public static ScheduleNotificationHelper getInstance(Context context) {
+        if (sInstance == null) {
+            sInstance = new ScheduleNotificationHelper(context);
+        }
+        return sInstance;
+    }
+
+    public PendingIntent createPendingNotificationIntent(Integer notificationId, Bundle bundle) {
+        Intent notificationIntent = new Intent(mContext, PushNotificationPublisher.class);
+        notificationIntent.putExtra(ScheduleNotificationHelper.NOTIFICATION_ID, notificationId);
+        notificationIntent.putExtras(bundle);
+        return PendingIntent.getBroadcast(mContext, notificationId, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+    }
+
+    public void schedulePendingNotificationIntent(PendingIntent intent, long fireDate) {
+        AlarmManager alarmManager = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            alarmManager.setExact(AlarmManager.RTC_WAKEUP, fireDate, intent);
+        } else {
+            alarmManager.set(AlarmManager.RTC_WAKEUP, fireDate, intent);
+        }
+    }
+
+    public void cancelScheduledNotificationIntent(PendingIntent intent) {
+        AlarmManager alarmManager = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);
+        alarmManager.cancel(intent);
+    }
+
+    public boolean savePreferences(String notificationId, PushNotificationProps notificationProps) {
+        SharedPreferences.Editor editor = scheduledNotificationsPersistence.edit();
+        editor.putString(notificationId, notificationProps.toString());
+        commit(editor);
+
+        return scheduledNotificationsPersistence.contains(notificationId);
+    }
+
+    public void removePreference(String notificationId) {
+        if (scheduledNotificationsPersistence.contains(notificationId)) {
+            // remove it from local storage
+            SharedPreferences.Editor editor = scheduledNotificationsPersistence.edit();
+            editor.remove(notificationId);
+            commit(editor);
+        } else {
+            Log.w(LOGTAG, "Unable to find notification " + notificationId);
+        }
+    }
+
+    public java.util.Set<String> getPreferencesKeys() {
+        return scheduledNotificationsPersistence.getAll().keySet();
+    }
+
+    private static void commit(SharedPreferences.Editor editor) {
+        if (Build.VERSION.SDK_INT < 9) {
+            editor.commit();
+        } else {
+            editor.apply();
+        }
+    }
+}
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/IPushNotification.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/IPushNotification.java
index 0d70024..b9e6c88 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/IPushNotification.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/IPushNotification.java
@@ -26,5 +26,21 @@ public interface IPushNotification {
      */
     int onPostRequest(Integer notificationId);
 
+    /**
+     * Handle a request to schedule this notification.
+     * 
+     * @param notificationId The specific ID to associated with the notification.
+     */
+    void onScheduleRequest(Integer notificationId);
+
+    /**
+     * Handle a request to post this scheduled notification.
+     *
+     * @param notificationId The specific ID to associated with the notification.
+     * @return The ID assigned to the notification.
+     */
+    int onPostScheduledRequest(Integer notificationId);
+
+
     PushNotificationProps asProps();
 }
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotification.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotification.java
index b93f762..400e086 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotification.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotification.java
@@ -8,6 +8,10 @@ import android.content.Context;
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
+import android.util.Log;
+
+import androidx.core.app.NotificationCompat;
+import androidx.core.app.NotificationManagerCompat;
 
 import com.facebook.react.bridge.ReactContext;
 import com.wix.reactnativenotifications.core.AppLaunchHelper;
@@ -17,7 +21,9 @@ import com.wix.reactnativenotifications.core.AppLifecycleFacadeHolder;
 import com.wix.reactnativenotifications.core.InitialNotificationHolder;
 import com.wix.reactnativenotifications.core.JsIOHelper;
 import com.wix.reactnativenotifications.core.NotificationIntentAdapter;
+import com.wix.reactnativenotifications.core.helpers.ScheduleNotificationHelper;
 
+import static com.wix.reactnativenotifications.Defs.LOGTAG;
 import static com.wix.reactnativenotifications.Defs.NOTIFICATION_OPENED_EVENT_NAME;
 import static com.wix.reactnativenotifications.Defs.NOTIFICATION_RECEIVED_EVENT_NAME;
 import static com.wix.reactnativenotifications.Defs.NOTIFICATION_RECEIVED_BACKGROUND_EVENT_NAME;
@@ -28,7 +34,7 @@ public class PushNotification implements IPushNotification {
     final protected AppLifecycleFacade mAppLifecycleFacade;
     final protected AppLaunchHelper mAppLaunchHelper;
     final protected JsIOHelper mJsIOHelper;
-    final protected PushNotificationProps mNotificationProps;
+    protected PushNotificationProps mNotificationProps;
     final protected AppVisibilityListener mAppVisibilityListener = new AppVisibilityListener() {
         @Override
         public void onAppVisible() {
@@ -61,7 +67,7 @@ public class PushNotification implements IPushNotification {
     }
 
     @Override
-    public void onReceived() throws InvalidNotificationException {
+    public void onReceived() {
         if (!mAppLifecycleFacade.isAppVisible()) {
             postNotification(null);
             notifyReceivedBackgroundToJS();
@@ -70,6 +76,41 @@ public class PushNotification implements IPushNotification {
         }
     }
 
+    @Override
+    public void onScheduleRequest(Integer notificationId) {
+        Bundle bundle = mNotificationProps.asBundle();
+
+        if (bundle.getString("body") == null) {
+            Log.e(LOGTAG, "No message specified for the scheduled notification");
+            return;
+        }
+
+        double date = bundle.getDouble("fireDate", 0);
+        if (date == 0) {
+            Log.e(LOGTAG, "No date specified for the scheduled notification");
+            return;
+        }
+
+        ScheduleNotificationHelper helper = ScheduleNotificationHelper.getInstance(mContext);
+        String notificationIdStr = Integer.toString(notificationId);
+        boolean isSaved = helper.savePreferences(notificationIdStr, mNotificationProps);
+        if (!isSaved) {
+            Log.e(LOGTAG, "Failed to save preference for notificationId " + notificationIdStr);
+        }
+
+        PendingIntent pendingIntent = helper.createPendingNotificationIntent(notificationId, bundle);
+        long fireDate = (long) date;
+        helper.schedulePendingNotificationIntent(pendingIntent, fireDate);
+    }
+
+    @Override
+    public int onPostScheduledRequest(Integer notificationId) {
+        ScheduleNotificationHelper helper = ScheduleNotificationHelper.getInstance(mContext);
+        helper.removePreference(String.valueOf(notificationId));
+
+        return postNotification(notificationId);
+    }
+
     @Override
     public void onOpened() {
         digestNotification();
@@ -140,15 +181,16 @@ public class PushNotification implements IPushNotification {
     }
 
     protected Notification buildNotification(PendingIntent intent) {
-        return getNotificationBuilder(intent).build();
+        NotificationCompat.Builder builder = getNotificationBuilder(intent);
+        return builder.build();
     }
 
-    protected Notification.Builder getNotificationBuilder(PendingIntent intent) {
-        final Notification.Builder notification = new Notification.Builder(mContext)
+    protected NotificationCompat.Builder getNotificationBuilder(PendingIntent intent) {
+        final NotificationCompat.Builder notification = new NotificationCompat.Builder(mContext, DEFAULT_CHANNEL_ID)
                 .setContentTitle(mNotificationProps.getTitle())
                 .setContentText(mNotificationProps.getBody())
                 .setContentIntent(intent)
-                .setDefaults(Notification.DEFAULT_ALL)
+                .setDefaults(NotificationCompat.DEFAULT_ALL)
                 .setAutoCancel(true);
 
         setUpIcon(notification);
@@ -163,7 +205,7 @@ public class PushNotification implements IPushNotification {
         return notification;
     }
 
-    private void setUpIcon(Notification.Builder notification) {
+    private void setUpIcon(NotificationCompat.Builder notification) {
         int iconResId = getAppResourceId("notification_icon", "drawable");
         if (iconResId != 0) {
             notification.setSmallIcon(iconResId);
@@ -174,7 +216,7 @@ public class PushNotification implements IPushNotification {
         setUpIconColor(notification);
     }
 
-    private void setUpIconColor(Notification.Builder notification) {
+    private void setUpIconColor(NotificationCompat.Builder notification) {
         int colorResID = getAppResourceId("colorAccent", "color");
         if (colorResID != 0 && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             int color = mContext.getResources().getColor(colorResID);
@@ -189,7 +231,7 @@ public class PushNotification implements IPushNotification {
     }
 
     protected void postNotification(int id, Notification notification) {
-        final NotificationManager notificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);
+        final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(mContext);
         notificationManager.notify(id, notification);
     }
 
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotificationPublisher.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotificationPublisher.java
new file mode 100644
index 0000000..58ff887
--- /dev/null
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notification/PushNotificationPublisher.java
@@ -0,0 +1,27 @@
+package com.wix.reactnativenotifications.core.notification;
+
+import android.app.Application;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.util.Log;
+
+import static com.wix.reactnativenotifications.Defs.LOGTAG;
+
+public class PushNotificationPublisher extends BroadcastReceiver {
+    final static String NOTIFICATION_ID = "notificationId";
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        Log.d(LOGTAG, "Received scheduled notification intent");
+        int notificationId = intent.getIntExtra(NOTIFICATION_ID, 0);
+        long currentTime = System.currentTimeMillis();
+
+        Application applicationContext = (Application) context.getApplicationContext();
+        final IPushNotification pushNotification = PushNotification.get(applicationContext, intent.getExtras());
+
+        Log.i(LOGTAG, "PushNotificationPublisher: Prepare To Publish: " + notificationId + ", Now Time: " + currentTime);
+
+        pushNotification.onPostScheduledRequest(notificationId);
+    }
+}
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/IPushNotificationsDrawer.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/IPushNotificationsDrawer.java
index e22cd62..48aa1cd 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/IPushNotificationsDrawer.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/IPushNotificationsDrawer.java
@@ -11,4 +11,5 @@ public interface IPushNotificationsDrawer {
     void onNotificationClearRequest(int id);
     void onNotificationClearRequest(String tag, int id);
     void onAllNotificationsClearRequest();
+    void onCancelAllLocalNotifications();
 }
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/PushNotificationsDrawer.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/PushNotificationsDrawer.java
index a14089f..1262e6d 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/PushNotificationsDrawer.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/core/notificationdrawer/PushNotificationsDrawer.java
@@ -2,9 +2,15 @@ package com.wix.reactnativenotifications.core.notificationdrawer;
 
 import android.app.Activity;
 import android.app.NotificationManager;
+import android.app.PendingIntent;
 import android.content.Context;
+import android.os.Bundle;
+import android.util.Log;
 
 import com.wix.reactnativenotifications.core.AppLaunchHelper;
+import com.wix.reactnativenotifications.core.helpers.ScheduleNotificationHelper;
+
+import static com.wix.reactnativenotifications.Defs.LOGTAG;
 
 public class PushNotificationsDrawer implements IPushNotificationsDrawer {
 
@@ -62,4 +68,37 @@ public class PushNotificationsDrawer implements IPushNotificationsDrawer {
         final NotificationManager notificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);
         notificationManager.cancelAll();
     }
+
+    @Override
+    public void onCancelAllLocalNotifications() {
+        onAllNotificationsClearRequest();
+        cancelAllScheduledNotifications();
+    }
+
+    protected void cancelAllScheduledNotifications() {
+        Log.i(LOGTAG, "Cancelling all scheduled notifications");
+        ScheduleNotificationHelper helper = ScheduleNotificationHelper.getInstance(mContext);
+
+        for (String notificationId : helper.getPreferencesKeys()) {
+            cancelScheduledNotification(notificationId);
+        }
+    }
+
+    protected void cancelScheduledNotification(String notificationId) {
+        Log.i(LOGTAG, "Cancelling scheduled notification: " + notificationId);
+
+        ScheduleNotificationHelper helper = ScheduleNotificationHelper.getInstance(mContext);
+
+        // Remove it from the alarm manger schedule
+        Bundle bundle = new Bundle();
+        bundle.putString("id", notificationId);
+        PendingIntent pendingIntent = helper.createPendingNotificationIntent(Integer.parseInt(notificationId), bundle);
+        helper.cancelScheduledNotificationIntent(pendingIntent);
+
+        helper.removePreference(notificationId);
+
+        // Remove it from the notification center
+        final NotificationManager notificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);
+        notificationManager.cancel(Integer.parseInt(notificationId));
+    }
 }
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmToken.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmToken.java
index 7db6e8d..d4ff7d0 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmToken.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmToken.java
@@ -7,12 +7,12 @@ import android.util.Log;
 import com.facebook.react.ReactApplication;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.bridge.ReactContext;
-import com.google.firebase.messaging.FirebaseMessaging;
 import com.wix.reactnativenotifications.BuildConfig;
 import com.wix.reactnativenotifications.core.JsIOHelper;
 
 import static com.wix.reactnativenotifications.Defs.LOGTAG;
 import static com.wix.reactnativenotifications.Defs.TOKEN_RECEIVED_EVENT_NAME;
+import me.pushy.sdk.Pushy;
 
 public class FcmToken implements IFcmToken {
 
@@ -72,19 +72,18 @@ public class FcmToken implements IFcmToken {
     }
 
     protected void refreshToken() {
-        FirebaseMessaging.getInstance().getToken()
-            .addOnCompleteListener(task -> {
-                if (!task.isSuccessful()) {
-                    if (BuildConfig.DEBUG) Log.w(LOGTAG, "Fetching FCM registration token failed", task.getException());
-                    return;
-                }
-                sToken = task.getResult();
-                if (mAppContext instanceof IFcmTokenListenerApplication) {
-                    ((IFcmTokenListenerApplication) mAppContext).onNewFCMToken(sToken);
-                }
-                if (BuildConfig.DEBUG) Log.i(LOGTAG, "FCM has a new token" + "=" + sToken);
-                sendTokenToJS();
-            });
+        try {
+            sToken = Pushy.register(mAppContext);
+            if (mAppContext instanceof IFcmTokenListenerApplication) {
+                ((IFcmTokenListenerApplication) mAppContext).onNewFCMToken(sToken);
+            }
+            if (BuildConfig.DEBUG) Log.i(LOGTAG, "Pushy has a new token" + "=" + sToken);
+            sendTokenToJS();
+        }catch (Exception exc) {
+            if (BuildConfig.DEBUG) Log.w(LOGTAG, "Fetching Pushy registration token failed", exc);
+            return;
+        }
+
     }
 
     protected void sendTokenToJS() {
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmInstanceIdListenerService.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/PushReceiver.java
similarity index 51%
rename from node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmInstanceIdListenerService.java
rename to node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/PushReceiver.java
index adea989..ed83e93 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/FcmInstanceIdListenerService.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/PushReceiver.java
@@ -1,34 +1,30 @@
 package com.wix.reactnativenotifications.fcm;
 
+import static com.wix.reactnativenotifications.Defs.LOGTAG;
+
+import android.app.Notification;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
 
-import com.google.firebase.messaging.FirebaseMessagingService;
-import com.google.firebase.messaging.RemoteMessage;
-import com.wix.reactnativenotifications.BuildConfig;
 import com.wix.reactnativenotifications.core.notification.IPushNotification;
 import com.wix.reactnativenotifications.core.notification.PushNotification;
+import com.wix.reactnativenotifications.BuildConfig;
 
-import static com.wix.reactnativenotifications.Defs.LOGTAG;
-
-/**
- * Instance-ID + token refreshing handling service. Contacts the FCM to fetch the updated token.
- *
- * @author amitd
- */
-public class FcmInstanceIdListenerService extends FirebaseMessagingService {
-
+public class PushReceiver extends BroadcastReceiver {
     @Override
-    public void onMessageReceived(RemoteMessage message){
-        Bundle bundle = message.toIntent().getExtras();
-        if(BuildConfig.DEBUG) Log.d(LOGTAG, "New message from FCM: " + bundle);
+    public void onReceive(Context context, Intent intent) {
+        Bundle bundle = intent.getExtras();
+        if(BuildConfig.DEBUG) Log.d(LOGTAG, "New message from Pushy: " + bundle);
 
         try {
-            final IPushNotification notification = PushNotification.get(getApplicationContext(), bundle);
+            final IPushNotification notification = PushNotification.get(context, bundle);
             notification.onReceived();
         } catch (IPushNotification.InvalidNotificationException e) {
             // An FCM message, yes - but not the kind we know how to work with.
-            if(BuildConfig.DEBUG) Log.v(LOGTAG, "FCM message handling aborted", e);
+            if(BuildConfig.DEBUG) Log.v(LOGTAG, "Pushy message handling aborted", e);
         }
     }
 }
diff --git a/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/PushyApp.java b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/PushyApp.java
new file mode 100644
index 0000000..bc33ba3
--- /dev/null
+++ b/node_modules/react-native-notifications/lib/android/app/src/main/java/com/wix/reactnativenotifications/fcm/PushyApp.java
@@ -0,0 +1,30 @@
+package com.wix.reactnativenotifications.fcm;
+
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.content.Context;
+import android.os.Build;
+
+public class PushyApp{
+    public static void initializeApp(Context context){
+        createChannelId(context);
+    }
+
+    private static void createChannelId(Context context){
+        // Create the NotificationChannel, but only on API 26+ because
+        // the NotificationChannel class is new and not in the support library
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            CharSequence name = "Push Notifications";
+            String description = "Push Notifications";
+            int importance = NotificationManager.IMPORTANCE_DEFAULT;
+            NotificationChannel channel = new NotificationChannel("pushy", name, importance);
+            channel.setDescription(description);
+//            channel.setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION),null);
+            // Register the channel with the system; you can't change the importance
+            // or other notification behaviors after this
+            NotificationManager notificationManager = context.getSystemService(NotificationManager.class);
+            notificationManager.createNotificationChannel(channel);
+        }
+
+    }
+}
diff --git a/node_modules/react-native-notifications/lib/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java b/node_modules/react-native-notifications/lib/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java
index f9c858b..94ea188 100644
--- a/node_modules/react-native-notifications/lib/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java
+++ b/node_modules/react-native-notifications/lib/android/app/src/reactNative59/java/com/wix/reactnativenotifications/NotificationManagerCompatFacade.java
@@ -2,8 +2,8 @@
 package com.wix.reactnativenotifications;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.v4.app.NotificationManagerCompat;
+import androidx.annotation.NonNull;
+import androidx.core.app.NotificationManagerCompat;
 
 public abstract class NotificationManagerCompatFacade {
     public static NotificationManagerCompat from(@NonNull Context context) {
diff --git a/node_modules/react-native-notifications/lib/dist/DTO/Notification.d.ts b/node_modules/react-native-notifications/lib/dist/DTO/Notification.d.ts
index 7b2b3b1..3a2f872 100644
--- a/node_modules/react-native-notifications/lib/dist/DTO/Notification.d.ts
+++ b/node_modules/react-native-notifications/lib/dist/DTO/Notification.d.ts
@@ -1,4 +1,5 @@
 export declare class Notification {
+    fireDate?: number | string;
     identifier: string;
     payload: any;
     constructor(payload: object);
diff --git a/node_modules/react-native-notifications/lib/dist/DTO/Notification.js b/node_modules/react-native-notifications/lib/dist/DTO/Notification.js
index ad7fc1a..a04ec6b 100644
--- a/node_modules/react-native-notifications/lib/dist/DTO/Notification.js
+++ b/node_modules/react-native-notifications/lib/dist/DTO/Notification.js
@@ -5,6 +5,7 @@ class Notification {
     constructor(payload) {
         this.payload = payload;
         this.identifier = this.payload.identifier;
+        this.fireDate = undefined;
     }
     get title() {
         return this.payload.title;
diff --git a/node_modules/react-native-notifications/lib/dist/Notifications.d.ts b/node_modules/react-native-notifications/lib/dist/Notifications.d.ts
index 6e49fd4..1d94217 100644
--- a/node_modules/react-native-notifications/lib/dist/Notifications.d.ts
+++ b/node_modules/react-native-notifications/lib/dist/Notifications.d.ts
@@ -37,6 +37,10 @@ export declare class NotificationsRoot {
      * cancelLocalNotification
     */
     cancelLocalNotification(notificationId: number): void;
+    /**
+     * cancelAllLocalNotifications
+    */
+    cancelAllLocalNotifications(): void;
     /**
      * removeAllDeliveredNotifications
      */
diff --git a/node_modules/react-native-notifications/lib/dist/Notifications.js b/node_modules/react-native-notifications/lib/dist/Notifications.js
index 44ab53f..8000701 100644
--- a/node_modules/react-native-notifications/lib/dist/Notifications.js
+++ b/node_modules/react-native-notifications/lib/dist/Notifications.js
@@ -55,6 +55,12 @@ class NotificationsRoot {
     cancelLocalNotification(notificationId) {
         return this.commands.cancelLocalNotification(notificationId);
     }
+    /**
+     * cancelAllLocalNotifications
+    */
+    cancelAllLocalNotifications() {
+        this.commands.cancelAllLocalNotifications();
+    }
     /**
      * removeAllDeliveredNotifications
      */
diff --git a/node_modules/react-native-notifications/lib/ios/RNNotificationCenter.m b/node_modules/react-native-notifications/lib/ios/RNNotificationCenter.m
index 4b33656..0f189d6 100644
--- a/node_modules/react-native-notifications/lib/ios/RNNotificationCenter.m
+++ b/node_modules/react-native-notifications/lib/ios/RNNotificationCenter.m
@@ -83,7 +83,7 @@
         for (UNNotification *notification in notifications) {
             [formattedNotifications addObject:[RCTConvert UNNotificationPayload:notification]];
         }
-        callback(@[formattedNotifications]);
+        callback(formattedNotifications);
     }];
 }
 
diff --git a/node_modules/react-native-notifications/lib/src/Notifications.ts b/node_modules/react-native-notifications/lib/src/Notifications.ts
index 0848f6d..ceb271d 100644
--- a/node_modules/react-native-notifications/lib/src/Notifications.ts
+++ b/node_modules/react-native-notifications/lib/src/Notifications.ts
@@ -80,6 +80,13 @@ export class NotificationsRoot {
     return this.commands.cancelLocalNotification(notificationId);
   }
 
+  /**
+   * cancelAllLocalNotifications
+  */
+  public cancelAllLocalNotifications() {
+    this.commands.cancelAllLocalNotifications();
+  }
+
   /**
    * removeAllDeliveredNotifications
    */
diff --git a/node_modules/react-native-notifications/lib/src/NotificationsIOS.ts b/node_modules/react-native-notifications/lib/src/NotificationsIOS.ts
index 98fc19d..0c8ea3d 100644
--- a/node_modules/react-native-notifications/lib/src/NotificationsIOS.ts
+++ b/node_modules/react-native-notifications/lib/src/NotificationsIOS.ts
@@ -52,13 +52,6 @@ export class NotificationsIOS {
     return this.commands.setBadgeCount(count);
   }
 
-  /**
-   * cancelAllLocalNotifications
-   */
-  public cancelAllLocalNotifications() {
-    this.commands.cancelAllLocalNotifications();
-  }
-
   /**
    * checkPermissions
    */
